{"version":3,"sources":["webpack:///./src/app/views/auth-pages/recover-password/recover-password.component.html","webpack:///./src/app/views/auth-pages/recover-password/recover-password-routing.module.ts","webpack:///./src/app/views/auth-pages/recover-password/recover-password.component.scss","webpack:///./src/app/views/auth-pages/recover-password/recover-password.component.ts","webpack:///./src/app/views/auth-pages/recover-password/recover-password.module.ts","webpack:///./src/app/views/auth-pages/recover-password/recover-password.service.ts"],"names":[],"mappings":"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","file":"views-auth-pages-recover-password-recover-password-module.js","sourcesContent":["module.exports = \"<!-- Page -->\\r\\n<div class=\\\"page main-signin-wrapper\\\">\\r\\n\\r\\n  <!-- Row -->\\r\\n  <div class=\\\"row text-center pl-0 pr-0 ml-0 mr-0\\\">\\r\\n    <div class=\\\"col-lg-3 col-md-12 d-block mx-auto\\\">\\r\\n      <div class=\\\"text-center mb-2\\\">\\r\\n        <img src=\\\"assets/assets/img/brand/logo.png\\\" class=\\\"header-brand-img\\\" alt=\\\"logo\\\">\\r\\n      </div>\\r\\n      <div class=\\\"card custom-card\\\">\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <h4 class=\\\"text-center\\\">Reset Your Password</h4>\\r\\n          <app-alert></app-alert>\\r\\n          <form>\\r\\n            <div class=\\\"form-group text-left\\\">\\r\\n              <label>New Password</label>\\r\\n              <input class=\\\"form-control\\\" placeholder=\\\"Enter your password\\\" type=\\\"password\\\" [(ngModel)]=\\\"userData.password\\\" (keypress)=\\\"AvoidSpace($event)\\\" id=\\\"newPass\\\" name=\\\"newPass\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group text-left\\\">\\r\\n              <label>Confirm Password</label>\\r\\n              <input class=\\\"form-control\\\" placeholder=\\\"Enter your password\\\" type=\\\"password\\\" id=\\\"confPass\\\" name=\\\"confPass\\\" [(ngModel)]=\\\"userData.confirmPassword\\\" (keypress)=\\\"AvoidSpace($event)\\\">\\r\\n            </div>\\r\\n            <button class=\\\"btn ripple btn-main-primary btn-block\\\" [disabled]=\\\"(userData.password == '' || userData.confirmPassword == '')\\\"\\r\\n            (click)=\\\"recoverPassword()\\\">Reset Password</button>\\r\\n          </form>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <!-- End Row -->\\r\\n\\r\\n</div>\\r\\n<!-- End Page -->\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { RecoverPasswordComponent } from './recover-password.component';\n\n\nconst routes: Routes = [\n  { path: \"\", component: RecoverPasswordComponent, data: { title: 'Recover Password'} }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class RecoverPasswordRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL2F1dGgtcGFnZXMvcmVjb3Zlci1wYXNzd29yZC9yZWNvdmVyLXBhc3N3b3JkLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router} from '@angular/router';\r\nimport { RecoverPasswordService } from './recover-password.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { GlobalService } from './../../../shared-ui/global.service';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { AlertService } from './../../../shared-ui/alert/alert.service';\r\n\r\n@Component({\r\n  selector: 'app-recover-password',\r\n  templateUrl: './recover-password.component.html',\r\n  styleUrls: ['./recover-password.component.scss']\r\n})\r\nexport class RecoverPasswordComponent implements OnInit {\r\n  userData = {\r\n    password: '',\r\n    confirmPassword: ''\r\n  };\r\n  successMessage: string;\r\n  errorResponseMessage: string;\r\n  recoverData: any;\r\n  errorMessage = 'New password does not match with Confirm password';\r\n  userInfo: any = {};\r\n  userId: any;\r\n  link: any;\r\n  expiredLinkErrorMsg:  String = '';\r\n\r\n  constructor(\r\n    private toastr: ToastrService,\r\n    private router: Router,\r\n    private globalService: GlobalService,\r\n    private spinner: NgxSpinnerService,\r\n    private recoverPasswordService: RecoverPasswordService,\r\n    private route: ActivatedRoute,\r\n    private alertService: AlertService\r\n  ){\r\n    this.globalService.topscroll();\r\n    this.route.params.subscribe(res => {\r\n      this.userId = res.userId;\r\n      this.link = res.token;\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    if(this.userId && this.link) {\r\n      this.getUsersData();\r\n    }\r\n  }\r\n\r\n  getUsersData() {\r\n    this.expiredLinkErrorMsg = '';\r\n    this.spinner.show();\r\n    this.recoverPasswordService.getUserInfo({ id: this.userId, link: this.link}).subscribe(\r\n      data => {\r\n        if (data.status === 200) {\r\n          this.userInfo = data.data;\r\n          if(!this.userInfo.forgotLink) {\r\n            this.expiredLinkErrorMsg = 'Forgot Password Link has been expired. Please check link or again you can request for forgot password!';\r\n          }\r\n          this.spinner.hide();\r\n        } else{\r\n          this.spinner.hide();\r\n          this.expiredLinkErrorMsg = 'Forgot Password Link has been expired. Please check link or again you can request for forgot password!';\r\n        }\r\n      },\r\n      error => {\r\n        this.spinner.hide();\r\n        this.toastr.error(\r\n          'There are some server Please check connection.',\r\n          'Error'\r\n        );\r\n      }\r\n    );\r\n  }\r\n  recoverPassword() {\r\n    this.alertService.clear();\r\n    if(this.userData.password != this.userData.confirmPassword){\r\n      this.alertService.error(\"*Password and Confirm Password doesn't match!\");\r\n      return;\r\n    }\r\n\r\n    const userNewInfo = {\r\n      id: this.userId,\r\n      forgotLink: '',\r\n      forgotStatus: 0,\r\n      password: this.userData.password,\r\n      newPassword: this.userData.confirmPassword\r\n    };\r\n    this.spinner.show();\r\n    this.recoverPasswordService.updateUser(userNewInfo).subscribe(\r\n      data => {\r\n        this.spinner.hide();\r\n        if (data.status === 200) {\r\n          this.toastr.success('Your password has been changed successfully. Please login to continue.', 'Success');\r\n          this.router.navigate(['/signin']);\r\n        }\r\n      },\r\n      error => {\r\n        this.spinner.hide();\r\n        this.toastr.error(\r\n          'There are some server Please check connection.',\r\n          'Error'\r\n        );\r\n      }\r\n    );\r\n  }\r\n  AvoidSpace(event?: any) {\r\n    const k = event ? event.which : event.keyCode;\r\n    if (k === 32) { return false; }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { RecoverPasswordRoutingModule } from './recover-password-routing.module';\nimport { UiModule } from '../../../layouts/home-layout/ui.module';\nimport { SharedUiModule } from '../../../shared-ui/shared-ui.module';\nimport { FormsModule } from '@angular/forms';\nimport { RecoverPasswordComponent } from './recover-password.component';\n\n\n@NgModule({\n  declarations: [ RecoverPasswordComponent ],\n  imports: [\n    CommonModule,\n    RecoverPasswordRoutingModule,\n    UiModule,\n    SharedUiModule,\n    FormsModule\n  ]\n})\nexport class RecoverPasswordModule { }\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from './../../../../environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RecoverPasswordService {\r\n  baseUrl: string = environment.BASEURL;\r\n  constructor(\r\n    private http: HttpClient\r\n  ) { }\r\n\r\n  public getUserInfo(param: object): any {\r\n    let apiURL = `${this.baseUrl}users/GetUserInfo`;\r\n    return this.http.post(apiURL, param);\r\n  }\r\n\r\n  public updateUser(param: object): any {\r\n    let apiURL = `${this.baseUrl}users/UpdateUser`;\r\n    return this.http.post(apiURL, param);\r\n  }\r\n  \r\n}\r\n"],"sourceRoot":""}