{"version":3,"sources":["webpack:///./src/app/views/auth-pages/email-verification/email-verification.component.html","webpack:///./src/app/views/auth-pages/email-verification/email-verification-routing.module.ts","webpack:///./src/app/views/auth-pages/email-verification/email-verification.component.scss","webpack:///./src/app/views/auth-pages/email-verification/email-verification.component.ts","webpack:///./src/app/views/auth-pages/email-verification/email-verification.module.ts","webpack:///./src/app/views/auth-pages/email-verification/email-verification.service.ts"],"names":[],"mappings":"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","file":"views-auth-pages-email-verification-email-verification-module.js","sourcesContent":["module.exports = \"<div class=\\\"app-body auth-bg\\\">\\n  <main class=\\\"main form-design-1 d-flex align-items-center\\\">\\n    <div class=\\\"container\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-lg-8 col-8 col-md-8 mx-auto\\\">\\n          <div class=\\\"pt-30 pb-70 sm-pb-50\\\">\\n            <div class=\\\"no-border \\\">\\n              <div class=\\\"text-center\\\">\\n                <a class=\\\"navbar-brand mb-60\\\" [routerLink]=\\\"['/']\\\"><img alt=\\\"\\\" class=\\\"max-width-305\\\" src=\\\"assets/assets/img/brand/lLogo.png\\\" width=\\\"320\\\"></a>\\n                <h1 class=\\\"clr-white m-0 text-uppercase title\\\">Email Verification</h1>\\n                <br>\\n                <div class=\\\"alert alert-success\\\" role=\\\"alert\\\" *ngIf=\\\"emailVerificationSccessMsg\\\">\\n                  Your Email has been verified successfully. Please login to Continue.\\n                </div>\\n                <!-- <div class=\\\"alert alert-success\\\" role=\\\"alert\\\" *ngIf=\\\"emailVerificationSccessMsg\\\">\\n                  Your Email Verification has been verify successfully. Please login to Continue.\\n                </div> -->\\n                <div class=\\\"alert alert-danger\\\" role=\\\"alert\\\" *ngIf=\\\"emailVerificationErrorMsg\\\">\\n                   Already You have done Email Verification you don't need to again. Please login to Continue.\\n                </div>\\n                <div class=\\\"alert alert-danger\\\" role=\\\"alert\\\" *ngIf=\\\"emailVerificationInvalidMsg\\\">\\n                   This Email Verification link is not valid. Please check link\\n                </div>\\n                <button type=\\\"button\\\" [routerLink]=\\\"['/signin']\\\" class=\\\"btn btn-primary px-4\\\">Login</button>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </main>\\n</div>\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { EmailVerificationComponent } from './email-verification.component';\n\n\nconst routes: Routes = [\n  { path: \"\", component: EmailVerificationComponent, data: { title: 'Email Verification'} }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class EmailVerificationRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL2F1dGgtcGFnZXMvZW1haWwtdmVyaWZpY2F0aW9uL2VtYWlsLXZlcmlmaWNhdGlvbi5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { ActivatedRoute } from '@angular/router';\nimport { GlobalService } from './../../../shared-ui/global.service';\nimport { EmailVerificationService } from './email-verification.service'\n\n@Component({\n  selector: 'app-email-verification',\n  templateUrl: './email-verification.component.html',\n  styleUrls: ['./email-verification.component.scss']\n})\n\nexport class EmailVerificationComponent implements OnInit {\n\n  userInfo: any = {};\n  userId: String = '';\n  token: String = '';\n  emailVerificationSccessMsg = false;\n  emailVerificationErrorMsg = false;\n  emailVerificationInvalidMsg = false;\n  constructor(\n    private toastr: ToastrService,\n    private spinner: NgxSpinnerService,\n    private globalService: GlobalService,\n    private emailVerificationService: EmailVerificationService,\n    private route: ActivatedRoute) {\n    this.globalService.topscroll();\n    this.route.params.subscribe(res => {\n      this.userId = res.userId;\n      this.token = res.token;\n    });\n  }\n\n  ngOnInit() {\n    if (this.userId && this.token) {\n      this.getUsersData();\n    }\n  }\n\n  getUsersData() {\n    this.spinner.show();\n    this.emailVerificationService.getUserInfo({ id: this.userId, token: this.token}).subscribe(\n      data => {\n        console.log(\"this.userInfo -------- \", data);\n        if (data.status === 200) {\n          this.userInfo = data.data;\n          if (this.userInfo.emailVerificationStatus) {\n            this.spinner.hide();\n            this.emailVerificationErrorMsg = true;\n          } else{\n            this.emailVerificationSccessMsg = true;\n            this.updateData();\n          }\n        } else{\n          this.spinner.hide();\n          this.emailVerificationInvalidMsg = true;\n          this.toastr.warning(\n            data.message,\n            'Error'\n          );\n        }\n      },\n      error => {\n        this.spinner.hide();\n        this.toastr.error(\n          'There are some server error! Please check connection.',\n          'Error'\n        );\n      }\n    );\n  }\n\n  updateData() {\n    const postData = {\n      id: this.userInfo.id,\n      emailVerificationStatus: 1,\n      status: 'active'\n    };\n    console.log(\"postData ------------ \", postData);\n    this.emailVerificationService.updateUser(postData).subscribe(\n      data => {\n        this.spinner.hide();\n        if (data.status === 200) {\n          this.toastr.success('Email Verification successfully. ', 'Success');\n        }\n      },\n      error => {\n        this.spinner.hide();\n        this.toastr.error(\n          'There are some server Please check connection.',\n          'Error'\n        );\n      }\n    );\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { EmailVerificationRoutingModule } from './email-verification-routing.module';\nimport { UiModule } from '../../../layouts/home-layout/ui.module';\nimport { SharedUiModule } from '../../../shared-ui/shared-ui.module';\nimport { EmailVerificationComponent } from './email-verification.component';\n\n\n@NgModule({\n  declarations: [ EmailVerificationComponent ],\n  imports: [\n    CommonModule,\n    EmailVerificationRoutingModule,\n    UiModule,\n    SharedUiModule\n  ]\n})\nexport class EmailVerificationModule { }\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from './../../../../environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EmailVerificationService {\r\n  baseUrl: string = environment.BASEURL;\r\n  constructor(\r\n    private http: HttpClient\r\n  ) { }\r\n\r\n  public getUserInfo(param: object): any {\r\n    let apiURL = `${this.baseUrl}users/GetUserInfo`;\r\n    return this.http.post(apiURL, param);\r\n  }\r\n\r\n  public updateUser(param: object): any {\r\n    let apiURL = `${this.baseUrl}users/UpdateUser`;\r\n    return this.http.post(apiURL, param);\r\n  }\r\n\r\n}\r\n"],"sourceRoot":""}