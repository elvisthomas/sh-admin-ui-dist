{"version":3,"sources":["webpack:///./src/app/views/auth-pages/iframe-access/iframe-access.component.html","webpack:///./src/app/views/auth-pages/iframe-access/iframe-access-routing.module.ts","webpack:///./src/app/views/auth-pages/iframe-access/iframe-access.component.scss","webpack:///./src/app/views/auth-pages/iframe-access/iframe-access.component.ts","webpack:///./src/app/views/auth-pages/iframe-access/iframe-access.module.ts"],"names":[],"mappings":"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","file":"views-auth-pages-iframe-access-iframe-access-module.js","sourcesContent":["module.exports = \"\\t<!-- Page -->\\r\\n  <div class=\\\"page error-bg main-error-wrapper\\\">\\r\\n\\r\\n    <!-- Main-error -->\\r\\n    <div class=\\\"row align-items-center d-flex flex-row\\\">\\r\\n      <div class=\\\"col-lg-12 pr-lg-8 tx-lg-center\\\">\\r\\n        <h1 class=\\\"display-1 mb-0\\\"><img src=\\\"assets/assets/img/pngs/loading.gif\\\" class=\\\"header-brand-img\\\" alt=\\\"check-correct\\\"></h1>\\r\\n        <h2>Please wait, We are verifying your details.</h2>\\r\\n      </div>\\r\\n    </div>\\r\\n    <!-- End Main-error -->\\r\\n\\r\\n  </div>\\r\\n  <!-- End Page -->\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { IframeAccessComponent } from './iframe-access.component';\n\n\nconst routes: Routes = [\n  { path: '', component: IframeAccessComponent, pathMatch: 'full' }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class IframeAccessRoutingModule { }\n","module.exports = \".header-brand-img {\\n  height: 7rem;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdmlld3MvYXV0aC1wYWdlcy9pZnJhbWUtYWNjZXNzL0Q6XFx4YW1wcFxcaHRkb2NzXFxzaC1hZG1pbi11aVxcYW5ndWxhci9zcmNcXGFwcFxcdmlld3NcXGF1dGgtcGFnZXNcXGlmcmFtZS1hY2Nlc3NcXGlmcmFtZS1hY2Nlc3MuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL3ZpZXdzL2F1dGgtcGFnZXMvaWZyYW1lLWFjY2Vzcy9pZnJhbWUtYWNjZXNzLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsWUFBQTtBQ0NGIiwiZmlsZSI6InNyYy9hcHAvdmlld3MvYXV0aC1wYWdlcy9pZnJhbWUtYWNjZXNzL2lmcmFtZS1hY2Nlc3MuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuaGVhZGVyLWJyYW5kLWltZyB7XHJcbiAgaGVpZ2h0OiA3cmVtO1xyXG59IiwiLmhlYWRlci1icmFuZC1pbWcge1xuICBoZWlnaHQ6IDdyZW07XG59Il19 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { JwtService } from '../../../shared-ui/jwt.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { GlobalService } from '../../../shared-ui/global.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Component({\r\n  selector: 'app-iframe-access',\r\n  templateUrl: './iframe-access.component.html',\r\n  styleUrls: ['./iframe-access.component.scss']\r\n})\r\nexport class IframeAccessComponent implements OnInit {\r\n\r\n  constructor(\r\n    private jwtService: JwtService,\r\n    private route: ActivatedRoute,\r\n    private spinner: NgxSpinnerService,\r\n    private globalService: GlobalService,\r\n    private toastr: ToastrService,\r\n    private router: Router,\r\n  ) {\r\n    this.route.params.subscribe((res) => {\r\n      let proxy = \"\";\r\n      if(res.proxy){\r\n        proxy = res.proxy;\r\n      }\r\n      if(res.email && res.createdt){\r\n        this.getAccess(res.email, res.createdt, proxy);\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  getAccess(email: any, createdt: any, proxy: any) {\r\n    this.spinner.show();\r\n    let postObject = {\r\n      email: email,\r\n      createdt: createdt,\r\n      source: 'Admin Portal'\r\n    }\r\n    if(proxy != \"\"){\r\n      postObject['proxy'] = proxy;\r\n    }\r\n    this.globalService.getConfig(postObject).subscribe(configDdata => {\r\n      this.globalService.getAccess(postObject).subscribe(data => {\r\n        if(data != \"\"){\r\n          this.jwtService.saveToken(this.makeRandom(this.lengthOfCode, this.possible));\r\n          let userDetails = {\r\n            id: data.userId,\r\n            firstName: data.firstName,\r\n            lastName: data.lastName,\r\n            fullName: data.fullName,\r\n            emailAddress: data.emailAddress,\r\n            isCustomerAdmin: data.isCustomerAdmin,\r\n            isSuccessHackerAdmin: data.isSuccessHackerAdmin,\r\n            company: data.company,\r\n            createDate: data.createDate,\r\n            config: configDdata\r\n          }\r\n          this.jwtService.saveCurrentUser(JSON.stringify(userDetails));\r\n          if(userDetails.isSuccessHackerAdmin){\r\n            this.router.navigate(['/company/list']);\r\n          }else{\r\n            this.router.navigate(['/user/list']);\r\n          }\r\n          this.toastr.success(\"Verified successfully.\", \"Success\");\r\n        }else{\r\n          this.router.navigate(['/404']);\r\n        }\r\n      }, error => {\r\n  \r\n      })\r\n    })\r\n\r\n    \r\n  }\r\n\r\n  makeRandom(lengthOfCode: number, possible: string) {\r\n    let text = \"\";\r\n    for (let i = 0; i < lengthOfCode; i++) {\r\n      text += possible.charAt(Math.floor(Math.random() * possible.length));\r\n    }\r\n      return text;\r\n  }\r\n  possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890&$#@\";\r\n  lengthOfCode = 80;\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { IframeAccessRoutingModule } from './iframe-access-routing.module';\nimport { IframeAccessComponent } from './iframe-access.component';\nimport { UiModule } from '../../../layouts/home-layout/ui.module';\nimport { FormsModule } from '@angular/forms';\nimport { SharedUiModule } from '../../../shared-ui/shared-ui.module';\n\n\n@NgModule({\n  declarations: [ IframeAccessComponent ],\n  imports: [\n    CommonModule,\n    IframeAccessRoutingModule,\n    UiModule,\n    FormsModule,\n    SharedUiModule,\n  ]\n})\nexport class IframeAccessModule { }\n"],"sourceRoot":""}