{"version":3,"sources":["webpack:///./src/app/views/auth-pages/signup/signup.component.html","webpack:///./src/app/views/auth-pages/signup/signup-routing.module.ts","webpack:///./src/app/views/auth-pages/signup/signup.component.scss","webpack:///./src/app/views/auth-pages/signup/signup.component.ts","webpack:///./src/app/views/auth-pages/signup/signup.module.ts","webpack:///./src/app/views/auth-pages/signup/signup.service.ts"],"names":[],"mappings":";;;;;;;;;AAAA,0yE;;;;;;;;;;;;;;;;;;;;;;;ACAyC;AACc;AACF;AAGrD,IAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,iEAAe,EAAE,IAAI,EAAE,EAAE,KAAK,EAAE,QAAQ,EAAC,EAAE;CACnE,CAAC;AAOF;IAAA;IAAmC,CAAC;IAAvB,mBAAmB;QAJ/B,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;SACxB,CAAC;OACW,mBAAmB,CAAI;IAAD,0BAAC;CAAA;AAAJ;;;;;;;;;;;;ACdhC,+DAA+D,mK;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAb;AAED;AACN;AACF;AAC4B;AACP;AACU;AACA;AAOxE;IAWE,yBACU,aAA4B,EAC5B,MAAqB,EACrB,MAAc,EACd,UAAsB,EACtB,YAA0B;QAJ1B,kBAAa,GAAb,aAAa,CAAe;QAC5B,WAAM,GAAN,MAAM,CAAe;QACrB,WAAM,GAAN,MAAM,CAAQ;QACd,eAAU,GAAV,UAAU,CAAY;QACtB,iBAAY,GAAZ,YAAY,CAAc;QAdpC,gBAAW,GAAgB,IAAI,2EAAW,CAAC;QAC3C,aAAQ,GAAQ;YACd,SAAS,EAAE,EAAE;YACb,QAAQ,EAAE,EAAE;YACZ,KAAK,EAAE,EAAE;YACT,QAAQ,EAAE,EAAE;YACZ,eAAe,EAAE,EAAE;SACpB,CAAC;QA+CF,sBAAiB,GAAG,KAAK,CAAC;IAvCtB,CAAC;IAEL,kCAAQ,GAAR;QACE,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,cAAc,EAAE,CAAC,CAAC;QAChE,IAAG,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,WAAW,CAAC,QAAQ,KAAK,qEAAW,CAAC,QAAQ,CAAC,KAAK,EAAC;YAC9E,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;SACtC;IACH,CAAC;IAED,kCAAQ,GAAR;QAAA,iBA4BC;QA3BC,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC;QAC1B,IAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,IAAI,EAAE,IAAI,IAAI,CAAC,QAAQ,CAAC,QAAQ,IAAI,EAAE,IAAI,IAAI,CAAC,QAAQ,CAAC,KAAK,IAAI,EAAE,IAAI,IAAI,CAAC,QAAQ,CAAC,QAAQ,IAAI,EAAE,IAAI,IAAI,CAAC,QAAQ,CAAC,eAAe,IAAI,EAAE,EAAC;YACnK,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,0CAA0C,CAAC,CAAC;YACpE,OAAO;SACR;QACD,IAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC,eAAe,EAAC;YACzD,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,+CAA+C,CAAC,CAAC;YACzE,OAAO;SACR;QACD,IAAG,IAAI,CAAC,iBAAiB,EAAC;YACxB,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,sBAAsB,CAAC,CAAC;YAChD,OAAO;SACR;QACD,OAAO,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC;QACrC,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,UAAU,CAAC;QAClC,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,UAAC,IAAI;YACxD,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;YAC/B,IAAG,IAAI,CAAC,MAAM,IAAI,GAAG,EAAC;gBACpB,KAAI,CAAC,YAAY,CAAC,OAAO,CAAC,oFAAoF,CAAC,CAAC;gBAChH,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,oFAAoF,EAAE,SAAS,CAAC,CAAC;gBACrH,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;aACnC;iBAAI;gBACH,KAAI,CAAC,YAAY,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;aACvC;QACH,CAAC,EAAE,UAAC,KAAK;YACP,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,uDAAuD,EAAE,OAAO,CAAC,CAAC;QACtF,CAAC,CAAC,CAAC;IACL,CAAC;IAGD,sCAAY,GAAZ,UAAa,KAAK;QAAlB,iBAWC;QAVC,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;QAC/B,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC;QAC1B,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,UAAC,IAAI;YAC5D,OAAO,CAAC,GAAG,CAAC,kBAAkB,EAAE,IAAI,CAAC,CAAC;YACtC,IAAG,IAAI,CAAC,MAAM,IAAI,GAAG,EAAC;gBACpB,KAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;gBAC9B,KAAI,CAAC,YAAY,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBACtC,OAAO;aACR;QACH,CAAC,CAAC,CAAC;IACL,CAAC;;gBAxDwB,6DAAa;gBACpB,wDAAa;gBACb,sDAAM;gBACF,iEAAU;gBACR,2EAAY;;IAhBzB,eAAe;QAL3B,+DAAS,CAAC;YACT,QAAQ,EAAE,YAAY;YACtB,qKAAsC;;SAEvC,CAAC;yCAayB,6DAAa;YACpB,wDAAa;YACb,sDAAM;YACF,iEAAU;YACR,2EAAY;OAhBzB,eAAe,CAsE3B;IAAD,sBAAC;CAAA;AAtE2B;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACfa;AACM;AACe;AACT;AACa;AACG;AACxB;AAa7C;IAAA;IAA4B,CAAC;IAAhB,YAAY;QAVxB,8DAAQ,CAAC;YACR,YAAY,EAAE,CAAE,iEAAe,CAAE;YACjC,OAAO,EAAE;gBACP,4DAAY;gBACZ,0EAAmB;gBACnB,uEAAQ;gBACR,0EAAc;gBACd,0DAAW;aACZ;SACF,CAAC;OACW,YAAY,CAAI;IAAD,mBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnBkB;AACO;AACmB;AAKrE;IAEE,uBACU,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAF1B,YAAO,GAAW,qEAAW,CAAC,OAAO,CAAC;IAGlC,CAAC;IAEE,gCAAQ,GAAf,UAAgB,KAAa;QAC3B,IAAI,MAAM,GAAM,IAAI,CAAC,OAAO,mBAAgB,CAAC;QAC7C,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;IACvC,CAAC;IACM,oCAAY,GAAnB,UAAoB,KAAa;QAC/B,IAAI,MAAM,GAAM,IAAI,CAAC,OAAO,uBAAoB,CAAC;QACjD,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;IACvC,CAAC;;gBAVe,+DAAU;;IAHf,aAAa;QAHzB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAIgB,+DAAU;OAHf,aAAa,CAczB;IAAD,oBAAC;CAAA;AAdyB","file":"views-auth-pages-signup-signup-module.js","sourcesContent":["module.exports = \"<!-- Page -->\\n<div class=\\\"page main-signin-wrapper\\\">\\n\\n  <!-- Row -->\\n  <div class=\\\"row text-center pl-0 pr-0 ml-0 mr-0\\\">\\n    <div class=\\\"col-lg-3 d-block mx-auto\\\">\\n      <div class=\\\"text-center mb-2\\\">\\n        <img src=\\\"../assets/assets/img/brand/logo.png\\\" class=\\\"header-brand-img\\\" alt=\\\"logo\\\">\\n      </div>\\n      <div class=\\\"card custom-card\\\">\\n        <div class=\\\"card-body\\\">\\n          <h4 class=\\\"text-center\\\">Signup to Your Account</h4>\\n          <app-alert></app-alert>\\n          <form>\\n            <div class=\\\"form-group text-left\\\">\\n              <!-- <label>First Name</label> -->\\n              <input class=\\\"form-control\\\" name=\\\"firstName\\\" [(ngModel)]=\\\"userInfo.firstName\\\" placeholder=\\\"Enter your First Name\\\" type=\\\"text\\\">\\n            </div>\\n            <div class=\\\"form-group text-left\\\">\\n              <!-- <label>Last Name</label> -->\\n              <input class=\\\"form-control\\\" name=\\\"lastName\\\" [(ngModel)]=\\\"userInfo.lastName\\\"  placeholder=\\\"Enter your Last Name\\\" type=\\\"text\\\">\\n            </div>\\n            <div class=\\\"form-group text-left\\\">\\n              <!-- <label>Email</label> -->\\n              <input class=\\\"form-control\\\" name=\\\"email\\\" [(ngModel)]=\\\"userInfo.email\\\" placeholder=\\\"Enter your email\\\" type=\\\"text\\\" (blur)=\\\"isExistEmail(userInfo.email)\\\">\\n            </div>\\n            <div class=\\\"form-group text-left\\\">\\n              <!-- <label>Password</label> -->\\n              <input class=\\\"form-control\\\" name=\\\"password\\\" [(ngModel)]=\\\"userInfo.password\\\" placeholder=\\\"Enter your password\\\" type=\\\"password\\\">\\n            </div>\\n            <div class=\\\"form-group text-left\\\">\\n              <!-- <label>Confirm Password</label> -->\\n              <input class=\\\"form-control\\\" name=\\\"confirmPassword\\\" [(ngModel)]=\\\"userInfo.confirmPassword\\\" placeholder=\\\"Enter your confirm password\\\" type=\\\"password\\\">\\n            </div>\\n            <button class=\\\"btn ripple btn-main-primary btn-block\\\" (click)=\\\"doSignup()\\\">Create Account</button>\\n          </form>\\n          <div class=\\\"mt-3 text-center\\\">\\n            <p class=\\\"mb-0\\\">Already have an account? <a [routerLink]=\\\"['/signin']\\\">Sign In</a></p>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <!-- End Row -->\\n\\n</div>\\n<!-- End Page -->\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { SignupComponent } from './signup.component';\n\n\nconst routes: Routes = [\n  { path: \"\", component: SignupComponent, data: { title: 'SignUp'} }\n];\n\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class SignupRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL2F1dGgtcGFnZXMvc2lnbnVwL3NpZ251cC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { SignupService } from './signup.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { Router } from '@angular/router';\nimport { environment } from './../../../../environments/environment';\nimport { JwtService } from './../../../shared-ui/jwt.service';\nimport { AlertService } from './../../../shared-ui/alert/alert.service';\nimport { currentUser } from './../../../layouts/home-layout/user.model';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.scss']\n})\nexport class SignupComponent implements OnInit {\n\n  currentUser: currentUser = new currentUser;\n  userInfo: any = {\n    firstName: '',\n    lastName: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  };\n\n  constructor(\n    private signupService: SignupService,\n    private toastr: ToastrService,\n    private router: Router,\n    private jwtService: JwtService,\n    private alertService: AlertService\n  ) { }\n\n  ngOnInit() {\n    this.currentUser = JSON.parse(this.jwtService.getCurrentUser());\n    if(this.currentUser && this.currentUser.userType === environment.USERTYPE.ADMIN){\n      this.router.navigate(['/dashboard']);\n    }\n  }\n\n  doSignup(){\n    this.alertService.clear();\n    if(this.userInfo.firstName == \"\" || this.userInfo.lastName == \"\" || this.userInfo.email == \"\" || this.userInfo.password == \"\" || this.userInfo.confirmPassword == \"\"){\n      this.alertService.error('*Please fill all mandatory fields first!');\n      return;\n    }\n    if(this.userInfo.password != this.userInfo.confirmPassword){\n      this.alertService.error(\"*Password and Confirm Password doesn't match!\");\n      return;\n    }\n    if(this.isisExistingEmail){\n      this.alertService.error(\"Email already exist!\");\n      return;\n    }\n    delete this.userInfo.confirmPassword;\n    this.userInfo.status = 'inactive';\n    this.signupService.doSignup(this.userInfo).subscribe((data) => {\n      console.log(\"data is: \", data);\n      if(data.status == 200){\n        this.alertService.success(\"Account created successfully! Please check email for verifying your email address.\");\n        this.toastr.success('Account created successfully! Please check email for verifying your email address.', 'Success');\n        this.router.navigate(['/signin']);\n      }else{\n        this.alertService.error(data.message);\n      }\n    }, (error) => {\n      this.toastr.error('There are some server error! Please check connection.', 'Error');\n    });\n  }\n  \n  isisExistingEmail = false;\n  isExistEmail(email){\n    this.isisExistingEmail = false;\n    this.alertService.clear();\n    this.signupService.isExistEmail(this.userInfo).subscribe((data) => {\n      console.log(\"data is: xxxxx  \", data);\n      if(data.status == 200){\n        this.isisExistingEmail = true;\n        this.alertService.error(data.message);\n        return;\n      }\n    });\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SignupRoutingModule } from './signup-routing.module';\nimport { SignupComponent } from './signup.component';\nimport { UiModule } from '../../../layouts/home-layout/ui.module';\nimport { SharedUiModule } from '../../../shared-ui/shared-ui.module';\nimport { FormsModule } from '@angular/forms';\n\n\n@NgModule({\n  declarations: [ SignupComponent ],\n  imports: [\n    CommonModule,\n    SignupRoutingModule,\n    UiModule,\n    SharedUiModule,\n    FormsModule\n  ]\n})\nexport class SignupModule { }\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from './../../../../environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SignupService {\r\n  baseUrl: string = environment.BASEURL;\r\n  constructor(\r\n    private http: HttpClient\r\n  ) { }\r\n\r\n  public doSignup(param: object): any {\r\n    let apiURL = `${this.baseUrl}users/DoSignup`;\r\n    return this.http.post(apiURL, param);\r\n  }\r\n  public isExistEmail(param: object): any {\r\n    let apiURL = `${this.baseUrl}users/IsExistEmail`;\r\n    return this.http.post(apiURL, param);\r\n  }\r\n}\r\n"],"sourceRoot":""}