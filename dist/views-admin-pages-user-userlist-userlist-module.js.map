{"version":3,"sources":["webpack:///./src/app/views/admin-pages/user/userlist/userlist.component.html","webpack:///./src/app/views/admin-pages/user/userlist/userlist-routing.module.ts","webpack:///./src/app/views/admin-pages/user/userlist/userlist.component.scss","webpack:///./src/app/views/admin-pages/user/userlist/userlist.component.ts","webpack:///./src/app/views/admin-pages/user/userlist/userlist.module.ts"],"names":[],"mappings":"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","file":"views-admin-pages-user-userlist-userlist-module.js","sourcesContent":["module.exports = \"<div class=\\\"container-fluid\\\">\\r\\n\\r\\n  <!-- Page Header -->\\r\\n  <div class=\\\"page-header\\\">\\r\\n    <div>\\r\\n      <h2 class=\\\"main-content-title tx-24 mg-b-5\\\">Users</h2>\\r\\n      <ol class=\\\"breadcrumb\\\">\\r\\n          <li class=\\\"breadcrumb-item\\\"><a [routerLink]=\\\"['/dashboard']\\\">Home</a></li>\\r\\n        <li class=\\\"breadcrumb-item active\\\" aria-current=\\\"page\\\">Users</li>\\r\\n      </ol>\\r\\n    </div>\\r\\n  </div>\\r\\n  <!-- End Page Header -->\\r\\n\\r\\n  <!-- Row -->\\r\\n  <div class=\\\"row sidemenu-height\\\">\\r\\n    <div class=\\\"col-lg-12\\\">\\r\\n      <div class=\\\"card custom-card\\\">\\r\\n        <div class=\\\"card-body\\\">\\r\\n          \\r\\n          <!-- SALES TABEL -->\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n              <div class=\\\"row row-xs align-items-center mg-b-20\\\">\\r\\n                <div class=\\\"col-md-1\\\">\\r\\n                  <label class=\\\"mg-b-0\\\">Company:</label>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-5 mg-t-5 mg-md-t-0\\\">\\r\\n                  <select class=\\\"form-control\\\" [(ngModel)]=\\\"userSearch.company\\\" name=\\\"company\\\" (change)=\\\"getGroups(userSearch.company)\\\">\\r\\n                    <option value=\\\"\\\">Select Company</option>\\r\\n                    <option [value]=\\\"company?.id\\\" *ngFor=\\\"let company of companies;\\\">{{ company?.name }}</option>\\r\\n                  </select>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-6 mg-t-5 mg-md-t-0\\\">\\r\\n                  <div class=\\\"btn-icon-list\\\">\\r\\n                    <button class=\\\"btn ripple btn-success btn-icon\\\" [routerLink]=\\\"['/company/add']\\\"><i class=\\\"fe fe-plus\\\"></i></button>\\r\\n                    <button class=\\\"btn ripple btn-primary btn-icon\\\" [routerLink]=\\\"['/company/list']\\\"><i class=\\\"fe fe-list\\\"></i></button>\\r\\n                    <button class=\\\"btn ripple btn-info btn-icon\\\" [routerLink]=\\\"['/company/edit', userSearch.company]\\\" *ngIf=\\\"userSearch.company\\\"><i class=\\\"fe fe-edit\\\"></i></button>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            \\r\\n            <div class=\\\"col-md-12\\\">\\r\\n              <div class=\\\"row row-xs align-items-center mg-b-20\\\">\\r\\n                <div class=\\\"col-md-1\\\">\\r\\n                  <label class=\\\"mg-b-0\\\">Users:</label>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-2 mg-t-5 mg-md-t-0\\\">\\r\\n                  <div class=\\\"btn-icon-list\\\">\\r\\n                    <button class=\\\"btn ripple btn-success btn-icon\\\" [routerLink]=\\\"['/user/add']\\\" ><i class=\\\"fe fe-plus\\\"></i></button>\\r\\n                    <button class=\\\"btn ripple btn-secondary btn-icon\\\" *ngIf=\\\"selectedUsers?.length\\\" (click)=\\\"showDeleteModal()\\\"><i class=\\\"fe fe-trash\\\"></i></button>\\r\\n                    <input type=\\\"file\\\" class=\\\"custom-file-input\\\" accept=\\\"image/csv\\\" (change)=\\\"uploadFile($event)\\\"> \\r\\n                    <!-- <button class=\\\"btn ripple btn-info btn-icon\\\"><i class=\\\"far fa-arrow-alt-circle-up\\\"></i></button> -->\\r\\n                    <button class=\\\"btn ripple btn-info btn-icon\\\"><i class=\\\"far fa-arrow-alt-circle-down\\\"></i></button>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-2 mg-t-5 mg-md-t-0\\\">\\r\\n                  <select class=\\\"form-control\\\" [(ngModel)]=\\\"userSearch.active\\\" name=\\\"active\\\">\\r\\n                    <option value=\\\"\\\">All Users</option>\\r\\n                    <option value=\\\"\\\">Active</option>\\r\\n                    <option value=\\\"\\\">Inactive‚Äù</option>\\r\\n                  </select>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-2 mg-t-5 mg-md-t-0\\\">\\r\\n                  <select class=\\\"form-control\\\" [(ngModel)]=\\\"userSearch.group\\\" name=\\\"group\\\">\\r\\n                    <option value=\\\"\\\">Select Group</option>\\r\\n                    <option value=\\\"\\\">Group 1</option>\\r\\n                    <option value=\\\"\\\">Group 2</option>\\r\\n                    <option value=\\\"\\\">Group 3</option>\\r\\n                  </select>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-2 mg-t-5 mg-md-t-0\\\">\\r\\n                  <button class=\\\"btn ripple btn-primary pd-x-30 mg-r-5\\\">Search</button>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n\\r\\n          <!-- Row -->\\r\\n\\t\\t\\t\\t\\t<div class=\\\"row row-sm\\\" *ngIf=\\\"!users?.length\\\">\\r\\n            <div class=\\\"col-md\\\">\\r\\n              <div class=\\\"card custom-card card-body text-center\\\">\\r\\n                <p class=\\\"card-text tx-24\\\">No data found!</p>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <!-- End Row -->\\r\\n\\r\\n          <div class=\\\"table-responsive\\\" *ngIf=\\\"users?.length\\\">\\r\\n            <table class=\\\"table table-striped mg-b-0\\\">\\r\\n              <thead class=\\\"nowrap\\\">\\r\\n                <tr>\\r\\n                  <th> <input type=\\\"checkbox\\\" [(ngModel)]=\\\"multiSelect\\\" name=\\\"multiSelect\\\" (click)=\\\"multiSelectCompany(multiSelect)\\\"/> </th>\\r\\n                  <th [class.active]=\\\"order === 'name'\\\" (click)=\\\"setOrder('name')\\\">\\r\\n                    Name\\r\\n                    <span [hidden]=\\\"reverse\\\">‚ñº</span>\\r\\n                    <span [hidden]=\\\"!reverse\\\">‚ñ≤</span>\\r\\n                  </th>\\r\\n                  <th [class.active]=\\\"order === 'email'\\\" (click)=\\\"setOrder('email')\\\">\\r\\n                    Email\\r\\n                    <span [hidden]=\\\"reverse\\\">‚ñº</span>\\r\\n                    <span [hidden]=\\\"!reverse\\\">‚ñ≤</span>\\r\\n                  </th>\\r\\n                  <th [class.active]=\\\"order === 'status'\\\" (click)=\\\"setOrder('status')\\\">\\r\\n                    Active\\r\\n                    <span [hidden]=\\\"reverse\\\">‚ñº</span>\\r\\n                    <span [hidden]=\\\"!reverse\\\">‚ñ≤</span>\\r\\n                  </th>\\r\\n                  <th [class.active]=\\\"order === 'createdBy'\\\" (click)=\\\"setOrder('createdBy')\\\">\\r\\n                    Created By\\r\\n                    <span [hidden]=\\\"reverse\\\">‚ñº</span>\\r\\n                    <span [hidden]=\\\"!reverse\\\">‚ñ≤</span>\\r\\n                  </th>\\r\\n                  <th [class.active]=\\\"order === 'dateCreated'\\\" (click)=\\\"setOrder('dateCreated')\\\">\\r\\n                    Date Created\\r\\n                    <span [hidden]=\\\"reverse\\\">‚ñº</span>\\r\\n                    <span [hidden]=\\\"!reverse\\\">‚ñ≤</span>\\r\\n                  </th>\\r\\n                  <th [class.active]=\\\"order === 'lastlogin'\\\" (click)=\\\"setOrder('lastlogin')\\\">\\r\\n                    Last Login\\r\\n                    <span [hidden]=\\\"reverse\\\">‚ñº</span>\\r\\n                    <span [hidden]=\\\"!reverse\\\">‚ñ≤</span>\\r\\n                  </th>\\r\\n                  <th [class.active]=\\\"order === 'groups'\\\" (click)=\\\"setOrder('groups')\\\">\\r\\n                    Groups\\r\\n                    <span [hidden]=\\\"reverse\\\">‚ñº</span>\\r\\n                    <span [hidden]=\\\"!reverse\\\">‚ñ≤</span>\\r\\n                  </th>\\r\\n                  <th [class.active]=\\\"order === 'company'\\\" (click)=\\\"setOrder('company')\\\">\\r\\n                    Company\\r\\n                    <span [hidden]=\\\"reverse\\\">‚ñº</span>\\r\\n                    <span [hidden]=\\\"!reverse\\\">‚ñ≤</span>\\r\\n                  </th>\\r\\n                  <th>Action</th>\\r\\n                </tr>\\r\\n              </thead>\\r\\n              <tbody>\\r\\n                <tr *ngFor=\\\"let user of users; let i = index;\\\">\\r\\n                  <th><input type=\\\"checkbox\\\" [(ngModel)]=\\\"user.added\\\" value=\\\"{{ user.id }}\\\" (change)=\\\"selectUser(user)\\\" /></th>\\r\\n                  <th>{{ user?.fullName }}</th>\\r\\n                  <th>{{ user?.emailAddress }}</th>\\r\\n                  <th [ngClass]=\\\"{'text-danger': user?.isActive == 0, 'text-primary': user?.isActive == 1 }\\\"> {{ user?.isActive ? 'Active' : 'Inactive' }} </th>\\r\\n                  <th> {{ user?.createdBy?.fullName }}</th>\\r\\n                  <th> {{ user?.createDate | date: 'yyyy-MM-dd' }} </th>\\r\\n                  <th> {{ user?.lastSeenDate | date: 'yyyy-MM-dd  hh:mm' }} </th>\\r\\n                  <th><span *ngFor=\\\"let group of user?.groups;\\\"> {{ group }} </span></th>\\r\\n                  <th> {{ user?.company?.name }} </th>\\r\\n                  <th>\\r\\n                    <div class=\\\"btn-icon-list\\\">\\r\\n                      <button class=\\\"btn ripple btn-secondary btn-icon\\\" (click)=\\\"showDeleteModal(user)\\\"><i class=\\\"fe fe-trash\\\"></i></button>\\r\\n                      <button class=\\\"btn ripple btn-info btn-icon\\\" [routerLink]=\\\"['/user/edit', user?.id]\\\"><i class=\\\"far fa-edit\\\"></i></button>\\r\\n                    </div>\\r\\n                  </th>\\r\\n                </tr>\\r\\n              </tbody>\\r\\n            </table>\\r\\n          </div>\\r\\n\\r\\n          <nav>\\r\\n            <ul class=\\\"pagination justify-content-end\\\">\\r\\n              <li class=\\\"page-item disabled\\\">\\r\\n                <a class=\\\"page-link\\\" href=\\\"#\\\" tabindex=\\\"-1\\\" aria-disabled=\\\"true\\\">Previous</a>\\r\\n              </li>\\r\\n              <li class=\\\"page-item\\\"><a class=\\\"page-link\\\" href=\\\"#\\\">1</a></li>\\r\\n              <li class=\\\"page-item active\\\" aria-current=\\\"page\\\">\\r\\n                <a class=\\\"page-link\\\" href=\\\"#\\\">2 <span class=\\\"sr-only\\\">(current)</span></a>\\r\\n              </li>\\r\\n              <li class=\\\"page-item\\\"><a class=\\\"page-link\\\" href=\\\"#\\\">3</a></li>\\r\\n              <li class=\\\"page-item\\\">\\r\\n                <a class=\\\"page-link\\\" href=\\\"#\\\">Next</a>\\r\\n              </li>\\r\\n            </ul>\\r\\n          </nav>\\r\\n          <!-- <div >\\r\\n            <div class=\\\"card-footer pagination-bar text-right pb-0 pt-3\\\">\\r\\n              <ul *ngIf=\\\"pager?.pages && pager?.pages.length\\\" class=\\\"pagination justify-content-end\\\">\\r\\n                <li [ngClass]=\\\"{disabled:pager?.currentPage === 1}\\\" class=\\\"page-item first-item\\\">\\r\\n                  <a class=\\\"page-link\\\">First</a>\\r\\n                </li>\\r\\n                <li [ngClass]=\\\"{disabled:pager?.currentPage === 1}\\\" class=\\\"page-item previous-item\\\">\\r\\n                  <a class=\\\"page-link\\\">Previous</a>\\r\\n                </li>\\r\\n                <li *ngFor=\\\"let page of pager?.pages\\\" [ngClass]=\\\"{active:pager?.currentPage === page}\\\" class=\\\"page-item number-item\\\">\\r\\n                  <a class=\\\"page-link\\\">{{page}}</a>\\r\\n                </li>\\r\\n                <li [ngClass]=\\\"{disabled:pager?.currentPage === pager?.totalPages}\\\" class=\\\"page-item next-item\\\">\\r\\n                  <a class=\\\"page-link\\\">Next</a>\\r\\n                </li>\\r\\n                <li [ngClass]=\\\"{disabled:pager?.currentPage === pager?.totalPages}\\\" class=\\\"page-item last-item\\\">\\r\\n                  <a class=\\\"page-link\\\">Last</a>\\r\\n                </li>\\r\\n              </ul>\\r\\n            </div>\\r\\n          </div> -->\\r\\n          <!-- END SALES TABEL -->\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <!-- End Row -->\\r\\n\\r\\n</div>\\r\\n\\r\\n<div bsModal [config]=\\\"{backdrop: 'static', keyboard: false}\\\"  #deleteUserModal=\\\"bs-modal\\\" class=\\\"modal fade\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\"\\r\\naria-labelledby=\\\"myModalLabel\\\" aria-hidden=\\\"true\\\">\\r\\n  <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\r\\n      <div class=\\\"modal-content\\\">\\r\\n          <div class=\\\"modal-header\\\">\\r\\n              <h4 class=\\\"modal-title\\\"><i class=\\\"fa fa-trash\\\"></i> Delete User</h4>\\r\\n              <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"deleteUserModal.hide();\\\" aria-label=\\\"Close\\\">\\r\\n              <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n              </button>\\r\\n          </div>\\r\\n          <div class=\\\"modal-body\\\">\\r\\n              <p>Are you sure want to delete this user?</p>\\r\\n              <p>\\r\\n\\r\\n              </p>\\r\\n          </div>\\r\\n          <div class=\\\"modal-footer\\\">\\r\\n              <button type=\\\"button\\\" class=\\\"btn btn-light\\\" (click)=\\\"deleteUserModal.hide();\\\">Close</button>\\r\\n              <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"deleteUser()\\\">Delete</button>\\r\\n          </div>\\r\\n      </div>\\r\\n  </div>\\r\\n</div>\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { UserlistComponent } from './userlist.component';\n\nconst routes: Routes = [\n  { path: '', component: UserlistComponent, pathMatch: 'full' }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class UserlistRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL2FkbWluLXBhZ2VzL3VzZXIvdXNlcmxpc3QvdXNlcmxpc3QuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { GlobalService } from '../../../../shared-ui/global.service';\r\nimport { UserSearch } from '../../../../shared-ui/models/global.model';\r\nimport { ModalDirective } from 'ngx-bootstrap';\r\n\r\n@Component({\r\n  selector: 'app-userlist',\r\n  templateUrl: './userlist.component.html',\r\n  styleUrls: ['./userlist.component.scss']\r\n})\r\nexport class UserlistComponent implements OnInit {\r\n\r\n  @ViewChild(\"deleteUserModal\", { static: false })\r\n  public deleteUserModal: ModalDirective;\r\n  \r\n  pager: any = {};\r\n  users: any;\r\n  pagination: any;\r\n  multiSelect: any;\r\n  selectedUsers: any = [];\r\n  selectedUser: any;\r\n  order: string = 'name';\r\n  reverse: boolean = false;\r\n  companies: any;\r\n  userSearch: UserSearch = new UserSearch;\r\n  \r\n  setOrder(value: string) {\r\n    if (this.order === value) {\r\n      this.reverse = !this.reverse;\r\n    }\r\n    this.order = value;\r\n  }\r\n  \r\n  constructor(\r\n    private toastr: ToastrService,\r\n    private spinner: NgxSpinnerService,\r\n    private globalService: GlobalService,\r\n  ) {\r\n    this.globalService.sendActionChildToParent('users'); \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getCompanies();\r\n    this.getUsers();\r\n  }\r\n\r\n  getCompanies(){\r\n    this.spinner.show();\r\n    this.globalService.getCompanies({}).subscribe(data => {\r\n      this.spinner.hide();\r\n      if(Object.keys(data).length){\r\n        this.companies = data.Items;\r\n      }\r\n    }, error => {\r\n      this.toastr.error('There are some server error! Please check connection.', 'Error');\r\n    });\r\n  }\r\n\r\n  getGroups(companyId: any){\r\n    this.globalService.getCompanies({}).subscribe(data => {\r\n      this.spinner.hide();\r\n      if(Object.keys(data).length){\r\n        this.companies = data.Items;\r\n      }\r\n    }, error => {\r\n      this.toastr.error('There are some server error! Please check connection.', 'Error');\r\n    });\r\n  }\r\n\r\n  getUsers(){\r\n    this.spinner.show();\r\n    this.globalService.getUsers({}).subscribe(data => {\r\n      this.spinner.hide();\r\n      if(Object.keys(data).length){\r\n        this.users = data.items;\r\n        this.pagination = data.meta;\r\n      }\r\n    }, error => {\r\n      this.toastr.error('There are some server error! Please check connection.', 'Error');\r\n    });\r\n  }\r\n\r\n  showDeleteModal(user: any){\r\n    this.selectedUser = user;\r\n    this.deleteUserModal.show();\r\n  }\r\n\r\n  multiSelectCompany(multiSelect: any){\r\n    this.selectedUsers = [];\r\n    this.users.forEach(element => {\r\n      if(multiSelect){\r\n        element.added = false;\r\n      }else{\r\n        element.added = true;\r\n        this.selectedUsers.push(element)\r\n      }\r\n    });\r\n  }\r\n\r\n  selectUser(user: object){\r\n    let found = this.selectedUsers.filter(e => e.id == user['id']);\r\n    if(found.length){\r\n      this.selectedUsers.splice(this.selectedUsers.indexOf(found[0]), 1);\r\n    }else{\r\n      this.selectedUsers.push(user);\r\n    }\r\n  }\r\n\r\n  deleteUser(){\r\n    let postData = {\r\n      isActive: 0,\r\n    }\r\n    this.globalService.updateUser(postData, this.selectedUser['id']).subscribe(data => {\r\n      this.deleteUserModal.hide();\r\n    });\r\n  }\r\n\r\n  uploadFile($event){\r\n    let file = $event.target.files[0];\r\n    console.log(\"file ------- \", file);\r\n    this.globalService.uploadFile(file).subscribe(\r\n      (data: any) => {\r\n\r\n      }\r\n    );\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { UserlistRoutingModule } from './userlist-routing.module';\nimport { UserlistComponent } from './userlist.component';\nimport { FormsModule } from '@angular/forms';\nimport { ModalModule } from 'ngx-bootstrap';\n\n\n@NgModule({\n  declarations: [ UserlistComponent ],\n  imports: [\n    CommonModule,\n    UserlistRoutingModule,\n    FormsModule,\n    ModalModule.forRoot()\n  ]\n})\nexport class UserlistModule { }\n"],"sourceRoot":""}